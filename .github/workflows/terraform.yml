name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Check if image exists
        id: check_image
        run: |
          IMAGE_NAME="my-custom-image"
          RESOURCE_GROUP="rg-vm-images"
          az image show --name "$IMAGE_NAME" --resource-group "$RESOURCE_GROUP" &> /dev/null
          if [ $? -eq 0 ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Template VM
        if: steps.check_image.outputs.exists == 'false'
        run: terraform apply -auto-approve -target=azurerm_windows_virtual_machine.template

      - name: Deallocate & Generalize Template VM
        if: steps.check_image.outputs.exists == 'false'
        run: |
          az vm deallocate --resource-group rg-vm-template --name vm-template
          az vm generalize --resource-group rg-vm-template --name vm-template

      - name: Import Custom Image if Exists
        if: steps.check_image.outputs.exists == 'true'
        run: terraform import azurerm_image.custom "/subscriptions/${{ secrets.ARM_SUBSCRIPTION_ID }}/resourceGroups/rg-vm-images/providers/Microsoft.Compute/images/my-custom-image"

      - name: Import RG if Exists
        run: |
          az group show --name rg-vm-apps --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }} &> /dev/null
          if [ $? -eq 0 ]; then
            terraform import azurerm_resource_group.rg "/subscriptions/${{ secrets.ARM_SUBSCRIPTION_ID }}/resourceGroups/rg-vm-apps"
          fi

      - name: Apply Final Infra (VMs)
        run: terraform apply -auto-approve
